version: '3.8'

services:
  # Database
  db:
    image: postgres:15
    container_name: zuexis_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: alchemize_db
      POSTGRES_USER: alchemize_user
      POSTGRES_PASSWORD: secure_password_123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (Message Broker) - Secured
  redis:
    image: redis:7-alpine
    container_name: zuexis_redis
    restart: unless-stopped
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-defaultpassword123}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --appendonly yes
      --appendfsync everysec
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-defaultpassword123}
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-defaultpassword123}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # FastAPI Web Server
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: web
    container_name: zuexis_web
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data:rw
      - ./static:/app/static:rw
      - uploads_volume:/app/uploads:rw
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://alchemize_user:secure_password_123@db:5432/alchemize_db}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://:defaultpassword123@redis:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://:defaultpassword123@redis:6379/0}
      - SECRET_KEY=${SECRET_KEY:-your_secret_key_here}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-defaultpassword123}
      - ENVIRONMENT=production
      - DEBUG=false
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.2'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # CPU Worker (Temporary - will work for basic functionality)
  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: worker
    container_name: zuexis_worker
    restart: unless-stopped
    volumes:
      - ./data:/app/data:rw
      - ./static:/app/static:rw
      - uploads_volume:/app/uploads:rw
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://alchemize_user:secure_password_123@db:5432/alchemize_db}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://:defaultpassword123@redis:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://:defaultpassword123@redis:6379/0}
      - SECRET_KEY=${SECRET_KEY:-your_secret_key_here}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-defaultpassword123}
      - ENVIRONMENT=production
      - DEBUG=false
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "celery", "-A", "app.celery_app", "inspect", "ping"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s

  # Task Scheduler
  beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: beat
    container_name: zuexis_beat
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://alchemize_user:secure_password_123@db:5432/alchemize_db}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL:-redis://:defaultpassword123@redis:6379/0}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND:-redis://:defaultpassword123@redis:6379/0}
      - SECRET_KEY=${SECRET_KEY:-your_secret_key_here}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-defaultpassword123}
      - ENVIRONMENT=production
      - DEBUG=false
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
        reservations:
          memory: 64M
          cpus: '0.05'
    healthcheck:
      test: ["CMD", "celery", "-A", "app.celery_app", "inspect", "scheduled"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 60s

  # Streamlit Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    container_name: zuexis_frontend
    restart: unless-stopped
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://web:8000/api/v1
      - ENVIRONMENT=production
      - DEBUG=false
    depends_on:
      web:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads_volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./uploads

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16